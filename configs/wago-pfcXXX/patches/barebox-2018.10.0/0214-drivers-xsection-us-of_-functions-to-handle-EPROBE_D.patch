From db7512172bc823dadc1616077c0f1cabf9c9dda0 Mon Sep 17 00:00:00 2001
From: Oleg Karfich <oleg.karfich@wago.com>
Date: Wed, 29 Apr 2020 12:13:46 +0200
Subject: [PATCH] drivers: xsection: us of_* functions to handle EPROBE_DEFER
 return values

Signed-off-by: Oleg Karfich <oleg.karfich@wago.com>
---
 drivers/misc/xsection.c | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

diff --git a/drivers/misc/xsection.c b/drivers/misc/xsection.c
index 894157b..2412825 100644
--- a/drivers/misc/xsection.c
+++ b/drivers/misc/xsection.c
@@ -23,6 +23,7 @@
 #include <linux/err.h>
 #include <net.h>
 #include <xsection.h>
+#include <fs.h>
 
 struct xsection_item {
 	struct cdev *cdev;
@@ -313,6 +314,7 @@ static int xsection_add_dev_param(struct device_node *np,
 	struct cdev *cdev;
 	struct param_d *param;
 	int ret = 0;
+	char *device_path;
 
 	partition_node = of_parse_phandle(np, param_name, 0);
 	if (!partition_node) {
@@ -320,7 +322,11 @@ static int xsection_add_dev_param(struct device_node *np,
 		goto out;
 	}
 
-	cdev = cdev_by_device_node(partition_node);
+	ret = of_find_path_by_node(partition_node, &device_path, 0);
+	if (ret == -EPROBE_DEFER)
+		goto out;
+
+	cdev = cdev_by_name(devpath_to_name(device_path));
 	if (!cdev) {
 		ret = -ENODEV;
 		goto out;
@@ -420,7 +426,9 @@ out_unreg:
 out:
 	free(xsection);
 	xsection = NULL;
-	dev_err(dev, "failed to probe %d\n", ret);
+
+	if (ret != -EPROBE_DEFER)
+		dev_err(dev, "failed to probe %d\n", ret);
 
 	return ret;
 }
-- 
2.7.4

